#include <stdio.h>
#include <string.h>

struct Contato {
    char telefone[15];
    char nome[50];
};

struct Celular {
    int credito;         
    int nivel_bateria;    
    char operadora[50];  
};

struct Ligacao {
    int duracao;  
    char destinatario[50];
};

struct Mensagem {
    char conteudo[200];
    char destinatario[50];
};

void verNivelBateria(struct Celular *celular) {
    printf("Nível de Bateria: %d%%\n", celular->nivel_bateria);
    printf("Tempo estimado de duração da bateria: %d minutos\n", celular->nivel_bateria * 2);
    printf("Pressione Enter para voltar ao menu principal...\n");
    getchar();
}

void verMensagens(struct Mensagem *mensagens, int qtd_mensagens) {
    if (qtd_mensagens == 0) {
        printf("Você não tem mensagens.\n");
    } else {
        for (int i = 0; i < qtd_mensagens; i++) {
            printf("Mensagem %d:\n", i + 1);
            printf("Destinatário: %s\n", mensagens[i].destinatario);
            printf("Conteúdo: %s\n", mensagens[i].conteudo);
            printf("----------------------------\n");
        }
    }
    printf("Pressione Enter para voltar ao menu principal...\n");
    getchar();  
}

void adicionarContato(struct Contato *agenda, int *qtd_contatos) {
    if (*qtd_contatos < 10) { 
        printf("Digite o nome do contato: ");
        fgets(agenda[*qtd_contatos].nome, 50, stdin);
        agenda[*qtd_contatos].nome[strcspn(agenda[*qtd_contatos].nome, "\n")] = '\0'; 
        printf("Digite o telefone do contato: ");
        fgets(agenda[*qtd_contatos].telefone, 15, stdin);
        agenda[*qtd_contatos].telefone[strcspn(agenda[*qtd_contatos].telefone, "\n")] = '\0';  
        (*qtd_contatos)++;
        printf("Contato adicionado com sucesso!\n");
    } else {
        printf("Agenda cheia! Não é possível adicionar mais contatos.\n");
    }
    printf("Pressione Enter para voltar ao menu principal...\n");
    getchar();  
}

void realizarLigacao(struct Celular *celular, struct Ligacao *historico, int *qtd_ligacoes) {
    if (celular->credito < 2) {  
        printf("Créditos insuficientes para realizar a ligação.\n");
        return;
    }

    char destinatario[50];
    printf("Digite o nome do destinatário da ligação: ");
    fgets(destinatario, 50, stdin);
    destinatario[strcspn(destinatario, "\n")] = '\0';  

    // Registra a ligação no histórico
    strcpy(historico[*qtd_ligacoes].destinatario, destinatario);
    historico[*qtd_ligacoes].duracao = 5; 
    (*qtd_ligacoes)++;

    // Subtrai os créditos
    celular->credito -= 2;
    printf("Ligação realizada para %s. Duração: 5 segundos.\n", destinatario);
    printf("Créditos restantes: %d\n", celular->credito);
    printf("Pressione Enter para voltar ao menu principal...\n");
    getchar();
}

void verCreditos(struct Celular *celular) {
    printf("Créditos disponíveis: %d\n", celular->credito);
    printf("Você pode realizar %d ligações ou enviar %d mensagens.\n",
           celular->credito / 2, celular->credito); 
    printf("Pressione Enter para voltar ao menu principal...\n");
    getchar(); 
}

void verOperadora(struct Celular *celular) {
    printf("Operadora: %s\n", celular->operadora);
    printf("Pressione Enter para voltar ao menu principal...\n");
    getchar();  
}

void menuPrincipal(struct Celular *celular, struct Mensagem *mensagens, int *qtd_mensagens,
                   struct Ligacao *historico, int *qtd_ligacoes, struct Contato *agenda, 
                   int *qtd_contatos) {
    int opcao;
    while (1) {
        printf("\nMenu Principal:\n");
        printf("1. Ver Nível de Bateria\n");
        printf("2. Mensagens\n");
        printf("3. Realizar Ligação\n");
        printf("4. Agenda\n");
        printf("5. Créditos\n");
        printf("6. Operadora\n");
        printf("0. Sair\n");
        printf("Escolha uma opção: ");
        scanf("%d", &opcao);
        getchar();  

        switch (opcao) {
            case 1:
                verNivelBateria(celular);
                break;
            case 2:
                verMensagens(mensagens, *qtd_mensagens);
                break;
            case 3:
                realizarLigacao(celular, historico, qtd_ligacoes);
                break;
            case 4:
                printf("Agenda de Contatos:\n");
                for (int i = 0; i < *qtd_contatos; i++) {
                    printf("Contato %d: %s - %s\n", i + 1, agenda[i].nome, agenda[i].telefone);
                }
                printf("Deseja adicionar um novo contato? (1 para sim, 0 para não): ");
                int opcao_add;
                scanf("%d", &opcao_add);
                getchar(); 
                if (opcao_add == 1) {
                    adicionarContato(agenda, qtd_contatos);
                }
                break;
            case 5:
                verCreditos(celular);
                break;
            case 6:
                verOperadora(celular);
                break;
            case 0:
                printf("Saindo do sistema...\n");
                return;
            default:
                printf("Opção inválida.\n");
        }
    }
}

int main() {
    struct Celular celular = {10, 100, "TIM"};
    struct Mensagem mensagens[10] = {{"Olá, tudo bem?", "joão"}, {"Bom dia!", "Livia"}};
    int qtd_mensagens = 2;
    struct Ligacao historico[10];
    int qtd_ligacoes = 0;
    struct Contato agenda[10];
    int qtd_contatos = 0;

    menuPrincipal(&celular, mensagens, &qtd_mensagens, historico, &qtd_ligacoes, agenda, &qtd_contatos);

    return 0;
}